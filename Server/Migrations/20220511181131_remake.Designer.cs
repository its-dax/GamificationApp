// <auto-generated />
using System;
using GamificationApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamificationApp.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220511181131_remake")]
    partial class remake
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamificationApp.Shared.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            A = "commit",
                            B = "clone",
                            C = "pull",
                            D = "fetch",
                            GoodAnswer = "C",
                            IsApproved = false,
                            SubjectId = 1,
                            Title = "Melyik git parancs okozhat merge conflictot?",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            A = "Docker",
                            B = "Azure cloud",
                            C = "Git",
                            D = "Jenkins",
                            GoodAnswer = "B",
                            IsApproved = false,
                            SubjectId = 1,
                            Title = "Melyik nem alapvető DevOps eszköz?",
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            A = "Az alkalmazás működésének gyorsítása",
                            B = "A fejlesztési folyamat gyorsítása",
                            C = "Folyamatos integráció",
                            D = "Folyamatos tesztelés",
                            GoodAnswer = "A",
                            IsApproved = true,
                            SubjectId = 1,
                            Title = "Melyik nem egy alapvető DevOps előny?",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            A = "A tesztelés automatizálása",
                            B = "A deployment automatizálása",
                            C = "Az integráció automatizálása",
                            D = "A fejlesztés automatizálása",
                            GoodAnswer = "D",
                            IsApproved = true,
                            SubjectId = 1,
                            Title = "Melyik nem alapvető feladata egy DevOps mérnöknek?",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            A = "A forráskód változásának figyelése",
                            B = "A forráskód futtatása",
                            C = "A csapatmunka megkönnyítése",
                            D = "A fejlesztés automatizálása",
                            GoodAnswer = "B",
                            IsApproved = true,
                            SubjectId = 1,
                            Title = "Mire nem használható alapvetően a git?",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            A = "git pull",
                            B = "git reset",
                            C = "git revert",
                            D = "git status",
                            GoodAnswer = "C",
                            IsApproved = true,
                            SubjectId = 1,
                            Title = "Melyik git parancs alapvető feladata egy commit által okozott változások visszaállítása? ",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            A = "Google",
                            B = "Microsoft",
                            C = "Apple",
                            D = "Amazon",
                            GoodAnswer = "C",
                            IsApproved = false,
                            SubjectId = 2,
                            Title = "Melyik nem a három nagy felhőszolgáltató egyike?",
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            A = "Privát felhő",
                            B = "Publikus felhő",
                            C = "Hibrid felhő",
                            D = "Statikus felhő",
                            GoodAnswer = "D",
                            IsApproved = true,
                            SubjectId = 2,
                            Title = "Melyik nem egy felhő deployment modell?",
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            A = "Internet as Code",
                            B = "Infrastructure as Code",
                            C = "Infrastructure as Cloud",
                            D = "Internet as Cloud",
                            GoodAnswer = "B",
                            IsApproved = true,
                            SubjectId = 2,
                            Title = "Minek a rövidítése az IaC",
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            A = "5",
                            B = "6",
                            C = "7",
                            D = "8",
                            GoodAnswer = "C",
                            IsApproved = true,
                            SubjectId = 3,
                            Title = "Mi az eredménye a kövekező műveletnek?  3 + 4 ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            A = "15",
                            B = "16",
                            C = "17",
                            D = "18",
                            GoodAnswer = "A",
                            IsApproved = true,
                            SubjectId = 3,
                            Title = "Mi az eredménye a kövekező műveletnek?  11 + 4 ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            A = "27",
                            B = "26",
                            C = "25",
                            D = "28",
                            GoodAnswer = "A",
                            IsApproved = true,
                            SubjectId = 3,
                            Title = "Mi az eredménye a kövekező műveletnek?  13 + 14 ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 13,
                            A = "7",
                            B = "6",
                            C = "5",
                            D = "8",
                            GoodAnswer = "D",
                            IsApproved = true,
                            SubjectId = 3,
                            Title = "Mi az eredménye a kövekező műveletnek?  6 + 2 ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            A = "7",
                            B = "12",
                            C = "5",
                            D = "8",
                            GoodAnswer = "B",
                            IsApproved = false,
                            SubjectId = 3,
                            Title = "Mi az eredménye a kövekező műveletnek?  6 x 2 ",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("GamificationApp.Shared.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Scores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Points = 13,
                            SubjectId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Points = 5,
                            SubjectId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Points = 2,
                            SubjectId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Points = 6,
                            SubjectId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Points = 7,
                            SubjectId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Points = 16,
                            SubjectId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Points = 26,
                            SubjectId = 7,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Points = 6,
                            SubjectId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Points = 15,
                            SubjectId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            Points = 0,
                            SubjectId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            Points = 7,
                            SubjectId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            Points = 12,
                            SubjectId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Points = 33,
                            SubjectId = 6,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            Points = 8,
                            SubjectId = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            Points = 4,
                            SubjectId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 16,
                            Points = 11,
                            SubjectId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 17,
                            Points = 7,
                            SubjectId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            Points = 27,
                            SubjectId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            Points = 14,
                            SubjectId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 20,
                            Points = 36,
                            SubjectId = 6,
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            Points = 1,
                            SubjectId = 7,
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            Points = 2,
                            SubjectId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 23,
                            Points = 0,
                            SubjectId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 24,
                            Points = 14,
                            SubjectId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 25,
                            Points = 10,
                            SubjectId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 26,
                            Points = 14,
                            SubjectId = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 27,
                            Points = 5,
                            SubjectId = 6,
                            UserId = 4
                        },
                        new
                        {
                            Id = 28,
                            Points = 33,
                            SubjectId = 7,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("GamificationApp.Shared.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "DevOps",
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "Felhő technológiák",
                            UserId = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Matematika 1",
                            UserId = 6
                        },
                        new
                        {
                            Id = 4,
                            Name = "Matematika 2",
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            Name = "Diszkrét matematika",
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            Name = "Számítógép hálózatok",
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            Name = "Operációs rendszerek",
                            UserId = 7
                        });
                });

            modelBuilder.Entity("GamificationApp.Shared.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NumberOfQuestions")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TestTimeInMinutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumberOfQuestions = 3,
                            StartTime = new DateTime(2022, 4, 30, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 1,
                            TestTimeInMinutes = 60
                        },
                        new
                        {
                            Id = 2,
                            NumberOfQuestions = 4,
                            StartTime = new DateTime(2022, 5, 10, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 1,
                            TestTimeInMinutes = 60
                        },
                        new
                        {
                            Id = 3,
                            NumberOfQuestions = 2,
                            StartTime = new DateTime(2022, 5, 10, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            SubjectId = 2,
                            TestTimeInMinutes = 60
                        });
                });

            modelBuilder.Entity("GamificationApp.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "M1DSSP",
                            Name = "Kovács Dávid",
                            Password = "M1DSSP",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "M2DSSP",
                            Name = "Szabó Éva",
                            Password = "M2DSSP",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "M3DSSP",
                            Name = "Felföldi András",
                            Password = "M3DSSP",
                            Role = 0
                        },
                        new
                        {
                            Id = 4,
                            Code = "M4DSSP",
                            Name = "Virág Kinga",
                            Password = "M4DSSP",
                            Role = 0
                        },
                        new
                        {
                            Id = 5,
                            Code = "ADMIN1",
                            Name = "Német Anna",
                            Password = "ADMIN1",
                            Role = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = "ADMIN2",
                            Name = "Király András",
                            Password = "ADMIN2",
                            Role = 1
                        },
                        new
                        {
                            Id = 7,
                            Code = "ADMIN3",
                            Name = "Horváth Rebeka",
                            Password = "ADMIN3",
                            Role = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
